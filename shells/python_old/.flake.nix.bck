{
  description = "nix devShell for Work environments";

  inputs = {
    nixpkgs.url = "github:NixOS/nixpkgs/nixos-unstable";
    nixpkgs-python.url = "github:cachix/nixpkgs-python";
  };

  outputs = { self, nixpkgs, nixpkgs-python }:
    let
      allSystems = [
        "x86_64-linux" # 64bit AMD/Intel x86
        "aarch64-darwin" # 64bit ARM macOS
      ];

      forAllSystems = fn:
        nixpkgs.lib.genAttrs allSystems (system:
          let
            pkgs = import nixpkgs {
              inherit system;
              config = { allowUnfree = true; };
            };
            # packageOverrides = pkgs.callPackage ./python-packages.nix { };
          in fn {
            # python = nixpkgs-python.packages.${system}."3.8".override {
            #   inherit packageOverrides;
            # };
            inherit pkgs;
          });

    in {
      # $ nix develop
      devShells = forAllSystems ({ pkgs }: {
        default = pkgs.mkShell {
          name = "default shell";
          nativeBuildInputs = with pkgs;
            [
              (nixpkgs-python.packages.${system}."3.8".withPackages (ps:
                with ps;
                [
                  # Add more Python packages here
                ]))
            ];

          env.LD_LIBRARY_PATH = pkgs.lib.makeLibraryPath [
            # Required for numpy and pandas
            pkgs.stdenv.cc.cc.lib
            pkgs.libz
          ];

          shellHook = ''
            export DIRENV=1
            export GITHUB_TOKEN=""
            # Use virtual environment
            if [ ! -d .venv ]; then
              ${
                nixpkgs-python.packages.${pkgs.system}."3.8"
              }/bin/python -m venv .venv
            fi
            source .venv/bin/activate
            zsh
          '';
        };
      });
    };
}
